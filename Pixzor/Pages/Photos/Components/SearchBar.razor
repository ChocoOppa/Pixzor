<style> 
    form {
        display: flex;
        width: 60%;
    }
</style>

<EditForm Model="search" OnValidSubmit="NavToSearch">
    <MudAutocomplete Class="rounded"
                     T="string"
                     @bind-Value="@searchText"
                     SearchFunc="SearchPhotos"
                     OnAdornmentClick="NavToSearch"
                     Label="Search"
                     CoerceValue="true"
                     ResetValueOnEmptyText="true"
                     Variant="Variant.Filled"
                     Adornment="Adornment.End"
                     AdornmentIcon="@Icons.Filled.Search"
                     AdornmentColor="Color.Primary"
                     Style="background-color: white;">
        <MoreItemsTemplate>
            <MudText Align="Align.Center" Class="px-4 py-1">
                Only the first 10 items are shown
            </MudText>
        </MoreItemsTemplate>

        <NoItemsTemplate>
            <MudText Align="Align.Center" Class="px-4 py-1">
                No items found
            </MudText>
        </NoItemsTemplate>

    </MudAutocomplete>
</EditForm>

@code {
    //EditForm
    string search = string.Empty;

    private string[] states =
    {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };
    
    // Search
    string searchText = string.Empty;

    private void NavToSearch()
    {
        if (string.IsNullOrWhiteSpace(searchText)) NavigationManager.NavigateTo("/");
        else NavigationManager.NavigateTo($"/search/{searchText}");
    }

    private async Task<IEnumerable<string>> SearchPhotos(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}
