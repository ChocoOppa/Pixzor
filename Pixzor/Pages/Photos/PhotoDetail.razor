@page "/photo/{id:int}"

<style>
    .mud-skeleton-text {
        transform: none;
    }
</style>

<PageTitle>Photo</PageTitle>

<MudContainer MaxWidth="MaxWidth.False">
    @if (Photo.Id != 0)
    {
        <MudContainer MaxWidth="MaxWidth.False">
            <MudCardHeader Class="px-10" Style="box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px -5px;">
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.h3" GutterBottom="true"><b>@(string.IsNullOrEmpty(Photo.Alt) ? "This Photo Doesn't Have Title" : Photo.Alt)</b></MudText>
                    <MudLink Href="@Photo.PhotographerUrl" Target="_blank" Underline="Underline.None" Class="d-flex ml-3" Style="align-items: baseline; gap: 20px;">
                        <MudAvatar Style=@($"background-color: {String.Format("#{0:X6}", new Random((int)DateTime.Now.Ticks).Next(0x1000000))}; cursor: pointer;")>
                            @Photo.Photographer[0]
                        </MudAvatar>
                        <MudText Typo="Typo.h5" GutterBottom="true" Color="Color.Dark" Style="cursor: pointer;">Photographer: @Photo.Photographer</MudText>
                    </MudLink>
                </div>
                <MudLink Href="https://www.pexels.com" Target="_blank" Style="margin-left: auto;">
                    <MudImage Src="https://images.pexels.com/lib/api/pexels.png" Style="height: 80px;" />
                </MudLink>
            </MudCardHeader>
            <MudCardContent Class="pa-0">
                <MudLink Href="@(Photo.Url)" Target="_blank" Style="display: block; width: fit-content; margin: auto;">
                    <MudImage Src="@Photo.Src!.Large2x" Alt="@Photo.Alt" Style=" height: 800px;" />
                </MudLink>
            </MudCardContent>
            <MudCardActions Style="justify-content: end; box-shadow: rgba(0, 0, 0, 0.24) 0px -3px 8px -5px;">
                <MudToggleIconButton Size="Size.Large" Icon="@Icons.Filled.FavoriteBorder" Color="@Color.Primary" Title="Like"
                                 ToggledSize="Size.Large" ToggledIcon="@Icons.Filled.Favorite" ToggledColor="@Color.Primary" ToggledTitle="UnLike" />
                <MudIconButton Link="@(Photo.Url)" Target="_blank" Size="Size.Large" Color="Color.Primary" Icon="@Icons.Filled.Download">Original</MudIconButton>
            </MudCardActions>
        </MudContainer>
    }
    else
    {
        <MudContainer MaxWidth="MaxWidth.False">
            <MudCardHeader Class="px-10" Style="box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px -5px;">
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.h3" GutterBottom="true"><MudSkeleton Width="600px" /></MudText>
                    <MudLink Target="_blank" Underline="Underline.None" Class="d-flex ml-3" Style="align-items: center; gap: 20px;">
                        <MudSkeleton Height="40px" Width="40px" SkeletonType="SkeletonType.Circle" />
                        <MudText Typo="Typo.h5" GutterBottom="true" Color="Color.Dark" Style="cursor: pointer;">Photographer: </MudText><MudSkeleton Width="200px" />
                    </MudLink>
                </div>
                <MudLink Href="https://www.pexels.com" Target="_blank" Style="margin-left: auto;">
                    <MudImage Src="https://images.pexels.com/lib/api/pexels.png" Style="height: 80px;" />
                </MudLink>
            </MudCardHeader>
            <MudCardContent Class="pa-0">
                <MudLink Target="_blank" Style="display: block; width: fit-content; margin: auto;">
                    <MudSkeleton Height="800px" Style="width: 100vw; transform: none;" />
                </MudLink>
            </MudCardContent>
            <MudCardActions Style="justify-content: end; box-shadow: rgba(0, 0, 0, 0.24) 0px -3px 8px -5px;">
                <MudToggleIconButton Size="Size.Large" Icon="@Icons.Filled.FavoriteBorder" Color="@Color.Primary" Title="Like"
                                 ToggledSize="Size.Large" ToggledIcon="@Icons.Filled.Favorite" ToggledColor="@Color.Primary" ToggledTitle="UnLike" />
                <MudIconButton Target="_blank" Size="Size.Large" Color="Color.Primary" Icon="@Icons.Filled.Download">Original</MudIconButton>
            </MudCardActions>
        </MudContainer>
    }
    <MudText Typo="Typo.h4" Style="margin-left: 20px; margin-bottom: 40px;">Related Photos</MudText>
    <MudContainer Class="d-flex justify-center" MaxWidth="MaxWidth.False" Style="padding: 0 40px;">
        @if (PhotoPage.TotalResults > 0)
        {
            <PhotoGrid photoPage="PhotoPage" />
        }
        else
        {

        }
    </MudContainer>
</MudContainer>

@code {
    [Parameter]
    public int Id { get; set; }

    private Photo Photo = new();
    private string searchText { get; set; } = string.Empty;
    private PhotoPage PhotoPage = new();

    protected override async Task OnParametersSetAsync()
    {
        await LoadPhotos();
    }

    private async Task LoadPhotos()
    {
        Photo = await PhotoService.GetPhoto(Id);
        var localStorageSearch = await localStorage.ContainKeyAsync("searchText");
        if (localStorageSearch)
        {
            searchText = await localStorage.GetItemAsync<string>("searchText");
            PhotoPage = await PhotoService.SearchPhoto(searchText);
            return;
        }
        PhotoPage = await PhotoService.GetPhotos(1, 80);
        var result = PhotoPage.Photos.Find(p => p.Id == Id);
        PhotoPage.Photos.Remove(result);
    }

}
